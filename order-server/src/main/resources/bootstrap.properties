#bootstrap会先加载，在结合configserver一起使用时，bootstrap属性文件更适合做一些引导下文的配置
#在结合configserver使用时，bootstrap更多的是配置一些不经常变化甚至不变化的属性
#bootstrap.properties是被一个父级的Spring ApplictionContext加载的，
#这个父级的SpringApplictionContext是先加载的，在加载application.properties之前

#Spring是有上下文一说的，也叫Application Context，Application Context又是有父子关系的，
# 所以必须要理解ApplicationContext是什么。SpringCloud启动时，会先创建一个Bootstrap Context，
# 然后创建一个Application Context，Bootstrap Context是Application Context的父上下文，
#Bootstrap负责从外部源加载配置并解析，这两个上下文共用一个从外部获取的Environment。
#Bootstrap配置具有较高的优先级，不会被本地配置覆盖。Bootstrap典型的应用场景是使用SpringConfig，
#这个时候你需要把配置信息配在bootstrap里面。Bootstrap属于引导配置，Application属于应用配置。

#端口号
server.port=3333

spring.application.name=order-server

#eureka注册中心的地址
eureka.client.service-url.defaultZone=http://admin:123456@localhost:1111/eureka/

#负载均衡使用哪个类，一般项目这里不配置，使用默认的轮循策略
#PRODUCT-SERVER.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

#响应时间：找到接口的时间，默认值为一秒(如果访问的url方法上面加了@HystrixCommand注解，这里的配置就不会生效了，又回到默认值一秒了)
feign.client.config.default.connect-timeout=3000
#请求时间：接口可用返回值处理的时间
feign.client.config.default.read-timeout=3000

#对当前实例的重试次数
#PRODUCT-SERVER.ribbon.MaxAutoRetries=0
#切换实例的重试次数
#PRODUCT-SERVER.ribbon.MaxAutoRetriesNexServer=0
#对所有操作都进行重试
#PRODUCT-SERVER.ribbon.OkToRetryOnAllOperations=true

#feign集成hystrix，默认是关闭的，需要在这里开启一下
feign.hystrix.enabled=true

#是否启用超时，默认启用true（关闭的，把它给注释掉）
hystrix.command.default.execution.timeout.enabled=false
#命令执行超时时间，默认1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=3000

#激活所有的端点的web方式请求，开启hystrix仪表盘（在1.0版本不需要设置，2.0版本之后需要在这里设置）
management.endpoints.web.exposure.include=*

#配置中心的服务名
spring.cloud.config.discovery.service-id=config-server
#开启配置信息发现
spring.cloud.config.discovery.enabled=true
#分支的名称(开源项目可配可不配)
spring.cloud.config.label=master